{"version":3,"sources":["components/Photos/PhotosColumn/PhotoCard/PhotoCard.jsx","components/Photos/PhotosColumn/PhotosColumn.jsx","components/Photos/Photos.jsx","utils/generatePhotoColumns.js"],"names":["PhotoCard","src","className","PhotosColumn","photosElems","Photos","photos","maxCountOfColumns","useState","window","screen","width","widthWindow","setWidthWindow","countColumn","setCountColumn","columns","arrColumns","i","length","photosColumn","map","index","push","getColumn","Array","fill","el","colIndex","height","img","Image","sort","a","b","calcAttitudeImg","generatePhotoColumns","controlResize","maxColumns","temp","document","body","clientWidth","useEffect","addEventListener"],"mappings":"6MAkBeA,EAbG,SAAC,GAAW,IAAVC,EAAS,EAATA,IAEhB,OACI,qBAAKC,UAAW,qDAAhB,SACI,yBAASA,UAAW,iCAApB,SACI,mBAAGA,UAAW,mBAAd,SACI,qBAAKD,IAAKA,EAAKC,UAAW,2BCA/BC,EATM,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACnB,OACI,qBAAKF,UAAW,iBAAhB,SACKE,KCyDEC,UAxCA,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,kBAAuB,EACNC,mBAASC,OAAOC,OAAOC,OADjB,mBACrCC,EADqC,KACxBC,EADwB,OAENL,mBAASD,GAFH,mBAErCO,EAFqC,KAExBC,EAFwB,KAKtCC,EAnBQ,SAACC,EAAYX,GAG3B,IAFA,IAAMU,EAAS,GAENE,EAAI,EAAGA,EAAID,EAAWE,OAAQD,IAAK,CACxC,IAAME,EAAeH,EAAWC,GAAGZ,OAAOe,KAAI,SAACC,GAC3C,OAAO,cAAC,EAAD,CAAWrB,IAAKK,EAAOgB,GAAOrB,KAAUK,EAAOgB,GAAOrB,QAGjEe,EAAQO,KAAK,cAAC,EAAD,CAAcnB,YAAagB,GAAmBF,IAG/D,OAAOF,EAQSQ,CC1BgB,SAACR,EAASV,GAS1C,IARA,IAAIW,EAAaQ,MAAMT,GAASU,KAAK,GAAGL,KAAI,SAACM,EAAIT,GAC7C,MAAO,CACHU,SAAUV,EACVW,OAAQ,EACRvB,OAAQ,OAIPY,EAAI,EAAGA,EAAIZ,EAAOa,OAAQD,IAAK,CACpC,IAAMY,EAAM,IAAIC,MAChBD,EAAI7B,IAAMK,EAAOY,GAAGjB,IAEpBgB,EAAaA,EAAWe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEJ,OAASK,EAAEL,UAEpD,IAAMM,EAAkBL,EAAID,OAASC,EAAInB,MAAQ,IAEjDM,EAAW,GAAGY,QAAUM,EACxBlB,EAAW,GAAGX,OAAOiB,KAAKL,GAI9B,OADaD,EAAWe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEL,SAAWM,EAAEN,YDInCQ,CAAqBtB,EAAaR,GACfA,GAEhC+B,EAAgB,SAACC,GACnB,IAAMC,EAAOC,SAASC,KAAKC,YAEtBH,GAAQ,QAAW3B,GAAe,OAAyB,IAAf0B,GAC7CzB,EAAe0B,GACfxB,EAAe,IACPwB,GAAQ,QAAW3B,GAAe,OAC1CC,EAAe0B,GACfxB,EAAe,IACPwB,EAAO,MAAUA,GAAQ,OAAW3B,EAAc,KAASA,GAAe,OAClFC,EAAe0B,GACfxB,EAAe,IACPwB,EAAO,OAAU3B,EAAc,OACvCC,EAAe0B,GACfxB,EAAe,KAYvB,OARAsB,EAAc9B,GAEdoC,qBAAU,WACNlC,OAAOmC,iBAAiB,UAAU,WAC9BP,EAAc9B,QAEnB,IAGC,qBAAKL,UAAW,SAAhB,SACKc","file":"static/js/6.d85ea91c.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport './badge.scss'\n\n\nconst PhotoCard = ({src}) => {\n\n    return (\n        <div className={'photo-card hide-featured-badge hide-favorite-badge'}>\n            <article className={'photo-item photo-item--overlay'}>\n                <a className={'photo-item__link'}>\n                    <img src={src} className={'photo-item__img'}/>\n                </a>\n            </article>\n        </div>\n    )\n}\n\nexport default PhotoCard;\n","import React from \"react\";\n\nconst PhotosColumn = ({photosElems}) => {\n    return (\n        <div className={'photos__column'}>\n            {photosElems}\n        </div>\n    )\n}\n\n\nexport default PhotosColumn;\n","import React, {useEffect, useState} from \"react\";\nimport './Photos.scss'\nimport PhotoCard from \"./PhotosColumn/PhotoCard/PhotoCard\";\nimport PhotosColumn from \"./PhotosColumn/PhotosColumn\";\nimport {generatePhotoColumns} from \"../../utils/generatePhotoColumns\";\n\n\n\nconst getColumn = (arrColumns, photos) => {\n    const columns= [];\n\n    for (let i = 0; i < arrColumns.length; i++) {\n        const photosColumn = arrColumns[i].photos.map((index) => {\n            return <PhotoCard src={photos[index].src} key={photos[index].src}/>\n        });\n\n        columns.push(<PhotosColumn photosElems={photosColumn} key={i}/> )\n    }\n\n    return columns;\n}\n\nconst Photos = ({photos, maxCountOfColumns}) => {\n    const [widthWindow, setWidthWindow] = useState(window.screen.width);\n    const [countColumn, setCountColumn] = useState(maxCountOfColumns);\n\n    const arrColumns = generatePhotoColumns(countColumn, photos);\n    const columns = getColumn(arrColumns, photos);\n\n    const controlResize = (maxColumns) => {\n        const temp = document.body.clientWidth;\n\n        if ((temp >= 1440) && !(widthWindow >= 1440) && (maxColumns === 4)) {\n            setWidthWindow(temp);\n            setCountColumn(4);\n        } else if ((temp >= 1070) && !(widthWindow >= 1070)) {\n            setWidthWindow(temp);\n            setCountColumn(3);\n        } else if ((temp < 1070) && (temp >= 600) && !((widthWindow > 600) && (widthWindow <= 1070))) {\n            setWidthWindow(temp);\n            setCountColumn(2);\n        } else if ((temp < 600) && !(widthWindow < 600)) {\n            setWidthWindow(temp);\n            setCountColumn(1);\n        }\n    }\n\n    controlResize(maxCountOfColumns);\n\n    useEffect(() => {\n        window.addEventListener('resize', () => {\n            controlResize(maxCountOfColumns);\n        });\n    }, []);\n\n    return (\n        <div className={'photos'}>\n            {columns}\n        </div>\n    )\n}\n\nexport default Photos;\n","\nexport const generatePhotoColumns = (columns, photos) => {\n    let arrColumns = Array(columns).fill(0).map((el, i) => {\n        return {\n            colIndex: i,\n            height: 0,\n            photos: []\n        }\n    });\n\n    for (let i = 0; i < photos.length; i++) {\n        const img = new Image();\n        img.src = photos[i].src;\n\n        arrColumns = arrColumns.sort((a, b) => a.height - b.height);\n\n        const calcAttitudeImg = img.height / img.width * 100;\n\n        arrColumns[0].height += calcAttitudeImg;\n        arrColumns[0].photos.push(i);\n    }\n\n    arrColumns = arrColumns.sort((a, b) => a.colIndex - b.colIndex);\n    return arrColumns;\n}\n"],"sourceRoot":""}